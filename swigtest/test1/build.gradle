apply plugin: 'com.android.model.application'

// Manifest version information
def versionMajor = 1
def versionMinor = 1
def versionPatch = 0

model {
    android {
        compileSdkVersion = 22
        buildToolsVersion = "22.0.1"

        defaultConfig.with {
            applicationId = "com.sureshjoshi.android.ndkexample"
            minSdkVersion.apiLevel = 15
            targetSdkVersion.apiLevel = 22
            versionCode = versionMajor * 10000 + versionMinor * 100 + versionPatch
            versionName = "${versionMajor}.${versionMinor}.${versionPatch}"
        }
    }

    android.buildTypes {
        release {
            minifyEnabled = false
        }
    }

    android.ndk {
        moduleName = "SeePlusPlus" // Name of C++ module (i.e. libSeePlusPlus)
        cppFlags.add("-std=c++11") // Add provisions to allow C++11 functionality
        cppFlags.add("-fexceptions")
        stl = "gnustl_shared" // Which STL library to use: gnustl or stlport
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:22.2.0'
    compile 'com.jakewharton:butterknife:7.0.1'
}

// Adds dependecy on runSwig to JavaCompile task.
tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn runSwig
}

// Location of where to store the jni wrapped files
def coreWrapperDir = new File("${projectDir}/src/main/java/com/sureshjoshi/core")

task createCoreWrapperDir {
    coreWrapperDir.mkdirs()
}

// For this to work, it's assumed SWIG is installed
task runSwig(type: Exec, dependsOn: ['createCoreWrapperDir']) {

    String osName = System.getProperty("os.name").toLowerCase();
    if (osName.contains("windows")) {
        workingDir '/src/main/jni'   // This implicitly starts from $(projectDir) evidently
        commandLine 'cmd', '/c', 'swig'
        args '-c++', '-java', '-package', 'com.sureshjoshi.core', '-outdir', coreWrapperDir.absolutePath, 'SeePlusPlus.i'
    } else {
        // TODO: Need full path to SWIG here (Homebrew install - doesn't allow just 'swig')
        // Use commandLine '/usr/local/bin/swig' or /path/to/swig
//        commandLine 'swig'
        commandLine '/usr/local/bin/swig'
        args '-c++', '-java', '-package', 'com.sureshjoshi.core', '-outdir', coreWrapperDir.absolutePath, "${projectDir}/src/main/jni/SeePlusPlus.i"
    }

}
